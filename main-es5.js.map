{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/class/user/user.ts","webpack:///src/app/event/event.component.ts","webpack:///src/app/event/event.component.html","webpack:///src/app/login/login.component.ts","webpack:///src/app/login/login.component.html","webpack:///src/app/profile/profile.component.ts","webpack:///src/app/profile/profile.component.html","webpack:///src/app/register/register.component.ts","webpack:///src/app/register/register.component.html","webpack:///src/app/service/config.service.ts","webpack:///src/app/service/password-encryption.service.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","routes","path","component","AppRoutingModule","forRoot","imports","AppComponent","selector","templateUrl","styleUrls","AppModule","declarations","providers","bootstrap","User","email","password","firstName","lastName","contact","EventComponent","LoginComponent","service","router","encryptionService","user","undefined","console","log","document","getElementById","value","encrypt","alert","JSON","stringify","location","href","login","ProfileComponent","getUser","subscribe","data","RegisterComponent","createUser","navigate","register","ConfigService","http","httpOptions","headers","baseUrl","get","post","put","rmUrl","providedIn","PasswordEncryptionService","newPassword","forwards","backwards","tempIndex","i","length","indexOf","environment","production","bootstrapModule","err","error"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule, Component } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { LoginComponent } from './login/login.component';\r\nimport { RegisterComponent } from './register/register.component';\r\nimport { ProfileComponent } from './profile/profile.component';\r\nimport { EventComponent } from './event/event.component';\r\nimport { AppComponent } from './app.component';\r\n\r\nconst routes: Routes = [\r\n\t{ path: 'index', component: AppComponent },\r\n\t{ path: 'register', component: RegisterComponent },\r\n\t{ path: 'login', component: LoginComponent },\r\n\t{ path: 'profile', component: ProfileComponent },\r\n\t{ path: 'event', component: EventComponent }\r\n];\r\n\r\n@NgModule({\r\n\timports: [RouterModule.forRoot(routes)],\r\n\texports: [RouterModule]\r\n})\r\nexport class AppRoutingModule {\r\n}\r\n","import { Component } from '@angular/core';\r\n\r\n// ROOT COMPONENT\r\n@Component({\r\n\tselector: 'app-root',\r\n\ttemplateUrl: './app.component.html',\r\n\tstyleUrls: ['./app.component.css']\r\n})\r\nexport class AppComponent {\r\n\ttitle: 'GatherUp';\r\n}\r\n","<!-- PARENT TEMPLATE -->\r\n<div>\r\n\t<nav class=\"navbar navbar-expand-lg navbar-light bg-light\">\r\n\t\t<a class=\"navbar-brand\" [routerLink]=\"['/']\" routerLinkActive=\"router-link-active\">GatherUp</a>\r\n\t\t<button class=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarNav\" aria-controls=\"navbarNav\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n\t\t\t<span class=\"navbar-toggler-icon\"></span>\r\n\t\t</button>\r\n\t\t<div class=\"collapse navbar-collapse\" id=\"navbarNav\">\r\n\t\t\t<ul class=\"navbar-nav\">\r\n\t\t\t\t<li class=\"nav-item active\">\r\n\t\t\t\t\t<a class=\"nav-link\" [routerLink]=\"['/']\" routerLinkActive=\"router-link-active\">Home <span class=\"sr-only\">(current)</span></a>\r\n\t\t\t\t</li>\r\n\t\t\t\t<li class=\"nav-item\">\r\n\t\t\t\t\t<a class=\"nav-link\" [routerLink]=\"['/register']\" routerLinkActive=\"router-link-active\">Register</a>\r\n\t\t\t\t</li>\r\n\t\t\t\t<li class=\"nav-item\">\r\n\t\t\t\t\t<a class=\"nav-link\" [routerLink]=\"['/login']\" routerLinkActive=\"router-link-active\">Login</a>\r\n\t\t\t\t</li>\r\n\t\t\t\t<li class=\"nav-item\">\r\n\t\t\t\t\t<a class=\"nav-link\" [routerLink]=\"['/profile']\" routerLinkActive=\"router-link-active\">Profile</a>\r\n\t\t\t\t</li>\r\n\t\t\t\t<li class=\"nav-item\">\r\n\t\t\t\t\t<a class=\"nav-link\" [routerLink]=\"['/event']\" routerLinkActive=\"router-link-active\">Events</a>\r\n\t\t\t\t</li>\r\n\t\t\t</ul>\r\n\t\t</div>\r\n\t</nav>\r\n\t<div class=\"container\">\r\n\t\t<router-outlet></router-outlet>\r\n\t</div>\r\n</div>","import { NgModule } from '@angular/core';\r\nimport { BrowserModule } from '@angular/platform-browser';\r\nimport { FormsModule } from '@angular/forms'; // enables form features for app\r\nimport { HttpClientModule } from '@angular/common/http'; // enables HTTP functionality for app\r\nimport { AppRoutingModule } from './app-routing.module'; // enables routing functionality for app\r\n\r\nimport { AppComponent } from './app.component';\r\nimport { RegisterComponent } from './register/register.component';\r\nimport { LoginComponent } from './login/login.component';\r\nimport { ProfileComponent } from './profile/profile.component';\r\nimport { EventComponent } from './event/event.component';\r\nimport { ConfigService } from './service/config.service';\r\nimport { PasswordEncryptionService } from './service/password-encryption.service';\r\n\r\n// ROOT MODULE\r\n@NgModule({\r\n\tdeclarations: [\r\n\t\tAppComponent,\r\n\t\tRegisterComponent,\r\n\t\tLoginComponent,\r\n\t\tProfileComponent,\r\n\t\tEventComponent\r\n\t],\r\n\timports: [\r\n\t\tBrowserModule,\r\n\t\tFormsModule,\r\n\t\tHttpClientModule,\r\n\t\tAppRoutingModule,\r\n\t],\r\n\tproviders: [ConfigService, PasswordEncryptionService], // make providers global\r\n\tbootstrap: [AppComponent]\r\n})\r\nexport class AppModule {\r\n}\r\n","export class User {\r\n\r\n\temail: string; // will act as primary key; will be a foreign key when we associate users with their bucket list items\r\n\tpassword: string;\r\n\tfirstName: string;\r\n\tlastName: string;\r\n\tcontact: string;\r\n\r\n\tconstructor(email: string, password: string, firstName: string, lastName: string, contact: string) {\r\n\t\tthis.email = email;\r\n\t\tthis.password = password;\r\n\t\tthis.firstName = firstName;\r\n\t\tthis.lastName = lastName;\r\n\t\tthis.contact = contact;\r\n\t}\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n\tselector: 'app-event',\r\n\ttemplateUrl: './event.component.html',\r\n\tstyleUrls: ['./event.component.css']\r\n})\r\nexport class EventComponent implements OnInit {\r\n\r\n\tconstructor() {\r\n\t}\r\n\r\n\tngOnInit(): void {\r\n\t}\r\n\r\n\t// TODO: implement buttons to create, modify, and delete bucket list items\r\n}\r\n","<div class=\"container p-2\" id=\"box\">\r\n\t<!-- Event Heading -->\r\n\t<h1 class=\"jumbotron m-4\">Bucket List</h1>\r\n\r\n\t<!-- Event Row -->\r\n\t<div class=\"row\">\r\n\t\t<div class=\"col-8\">\r\n\t\t\t<img class=\"img-fluid m-4\" src=\"https://w.wallhaven.cc/full/2e/wallhaven-2evd36.jpg\" alt=\"Event Image\" width=\"100%\">\r\n\t\t</div>\r\n\t\t<div class=\"col-4\">\r\n\t\t\t<h2 class=\"m-4\">To Do</h2>\r\n\t\t\t<ul>\r\n\t\t\t\t<li>Lorem Ipsum</li>\r\n\t\t\t\t<li>Dolor Sit Amet</li>\r\n\t\t\t\t<li>Consectetur</li>\r\n\t\t\t\t<li>Adipiscing Elit</li>\r\n\t\t\t\t<li>Lorem Ipsum</li>\r\n\t\t\t\t<li>Dolor Sit Amet</li>\r\n\t\t\t\t<li>Consectetur</li>\r\n\t\t\t\t<li>Adipiscing Elit</li>\r\n\t\t\t\t<li>Lorem Ipsum</li>\r\n\t\t\t\t<li>Dolor Sit Amet</li>\r\n\t\t\t\t<li>Consectetur</li>\r\n\t\t\t\t<li>Adipiscing Elit</li>\r\n\t\t\t</ul>\r\n\t\t</div>\r\n\t</div>\r\n</div>","import { Component, OnInit } from '@angular/core';\r\nimport { User } from '../class/user/user';\r\nimport { ConfigService } from '../service/config.service';\r\nimport { Router } from '@angular/router';\r\nimport { PasswordEncryptionService } from '../service/password-encryption.service';\r\n\r\n@Component({\r\n\tselector: 'app-login',\r\n\ttemplateUrl: './login.component.html',\r\n\tstyleUrls: ['./login.component.css']\r\n})\r\nexport class LoginComponent implements OnInit {\r\n\r\n\t// For login()\r\n\tuser: User;\r\n\r\n\tconstructor(private service: ConfigService, private router: Router, private encryptionService: PasswordEncryptionService) {\r\n\t\t// Complains if this is removed, dunno why tbh\r\n\t\tthis.user = new User(undefined, undefined, undefined, undefined, undefined);\r\n\t}\r\n\r\n\tngOnInit(): void {\r\n\t}\r\n\r\n\tlogin() {\r\n\t\tconsole.log(\"Login button pressed.\");\r\n\r\n\t\t// Constructs a user object to validate credentials\r\n\t\tlet email = (<HTMLInputElement>document.getElementById(\"inputEmail\")).value;\r\n\t\tlet password = (<HTMLInputElement>document.getElementById(\"inputPassword\")).value;\r\n\t\tthis.user = new User(email, this.encryptionService.encrypt(password), undefined, undefined, undefined);\r\n\r\n\t\t// Sanity check\r\n\t\tconsole.log(this.user);\r\n\r\n\t\t// Validates against hard-coded credentials\r\n\t\tif (this.user.email == \"hello@world.com\" && this.user.password == \"p4ssw0rd\") {\r\n\t\t\talert('Login success!\\n\\n' + JSON.stringify(this.user, null, 4));\r\n\t\t\tlocation.href = \"/profile\"; // routes accordingly\r\n\t\t} else {\r\n\t\t\talert(\"Invalid credentials!\")\r\n\t\t}\r\n\r\n\t\t// TODO: validate against database credentials\r\n\t}\r\n}\r\n","<div class=\"container-fluid\">\r\n\t<div class=\"row no-gutter\">\r\n\t\t<!-- LEFT HALF -->\r\n\t\t<div class=\"col-md-6 d-none d-md-flex bg-image\"></div>\r\n\r\n\t\t<!-- RIGHT HALF -->\r\n\t\t<div class=\"col-md-6 bg-light\">\r\n\t\t\t<div class=\"login d-flex align-items-center\">\r\n\r\n\t\t\t\t<!-- LOGIN-->\r\n\t\t\t\t<div class=\"container\">\r\n\t\t\t\t\t<div class=\"row\">\r\n\t\t\t\t\t\t<div class=\"col-lg-10 col-xl-8 mx-auto\">\r\n\t\t\t\t\t\t\t<h3 class=\"display-4\">Login</h3>\r\n\t\t\t\t\t\t\t<form>\r\n\t\t\t\t\t\t\t\t<!-- INPUT FIELDS -->\r\n\t\t\t\t\t\t\t\t<div class=\"form-group\">\r\n\t\t\t\t\t\t\t\t\t<input [(ngModel)]=\"user.email\" #email=\"ngModel\" name=\"inputEmail\" id=\"inputEmail\" type=\"email\" placeholder=\"Email address\" class=\"form-control rounded-pill border-0 shadow my-3 px-4\" required>\r\n\t\t\t\t\t\t\t\t\t<div *ngIf=\"email.invalid && (email.dirty || email.touched)\" class=\"alert alert-danger rounded-pill border-0 shadow m-1\">\r\n\t\t\t\t\t\t\t\t\t\t<div *ngIf=\"email.errors.required\">Email is required!</div>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t<div class=\"form-group\">\r\n\t\t\t\t\t\t\t\t\t<input [(ngModel)]=\"user.password\" #password=\"ngModel\" name=\"inputPassword\" id=\"inputPassword\" type=\"password\" placeholder=\"Password\" class=\"form-control rounded-pill border-0 shadow my-3 px-4\" required>\r\n\t\t\t\t\t\t\t\t\t<div *ngIf=\"password.invalid && (password.dirty || password.touched)\" class=\"alert alert-danger rounded-pill border-0 shadow m-1\">\r\n\t\t\t\t\t\t\t\t\t\t<div *ngIf=\"password.errors.required\">\r\n\t\t\t\t\t\t\t\t\t\t\tPassword is required!\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t\t<!-- BUTTONS -->\r\n\t\t\t\t\t\t\t\t<button (click)=\"login()\" class=\"btn btn-primary btn-block text-uppercase rounded-pill border-0 shadow mt-4\" type=\"submit\">Sign In</button>\r\n\r\n\t\t\t\t\t\t\t\t<!-- ROUTING -->\r\n\t\t\t\t\t\t\t\t<div class=\"text-center justify-content-between mt-4\">\r\n\t\t\t\t\t\t\t\t\t<p>\r\n\t\t\t\t\t\t\t\t\t\tNew user? <a [routerLink]=\"['/register']\" routerLinkActive=\"router-link-active\" class=\"font-italic text-muted\">Register</a>\r\n\t\t\t\t\t\t\t\t\t</p>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</form>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t</div>\r\n</div>","import { Component, OnInit } from '@angular/core';\r\nimport { ConfigService, RickMorty } from '../service/config.service';\r\nimport { User } from '../class/user/user';\r\n\r\n@Component({\r\n\tselector: 'app-profile',\r\n\ttemplateUrl: './profile.component.html',\r\n\tstyleUrls: ['./profile.component.css']\r\n})\r\nexport class ProfileComponent implements OnInit {\r\n\r\n\tuser: User[];\r\n\r\n\tconstructor(private service: ConfigService) {\r\n\t}\r\n\r\n\tngOnInit(): void {\r\n\t\t// Upon initialization, fetches user from endpoint and inserts into user array\r\n\t\tthis.service.getUser().subscribe(data => { this.user = data; });\r\n\t}\r\n}\r\n","<div class=\"container\">\r\n\t<div class=\"card\">\r\n\t\t<div class=\"card-body\">\r\n\t\t\t<!-- INFORMATION -->\r\n\t\t\t<div class=\"text-left\">\r\n\t\t\t\t<div *ngFor=\"let user of user\">\r\n\t\t\t\t\t<p>Email: {{user?.email}}</p>\r\n\t\t\t\t\t<p>Password: {{user?.password}}</p>\r\n\t\t\t\t\t<p>First Name: {{user?.firstName}}</p>\r\n\t\t\t\t\t<p>Last Name: {{user?.lastName}}</p>\r\n\t\t\t\t\t<p>Contact: {{user?.contact}}</p>\r\n\r\n\t\t\t\t\t<br>\r\n\r\n\t\t\t\t\t<!-- Note: to print response as JSON, use the built in json pipe -->\r\n\t\t\t\t\t<p>User: {{user | json}}</p>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t</div>\r\n</div>","import { Component, OnInit } from '@angular/core';\r\nimport { User } from '../class/user/user';\r\nimport { ConfigService } from '../service/config.service';\r\nimport { Router } from '@angular/router';\r\nimport { HttpHeaders } from '@angular/common/http';\r\nimport { PasswordEncryptionService } from '../service/password-encryption.service';\r\n\r\n/* \r\n\tThis component maps input values to a JavaScript object and passes it to Java via our service's CRUD methods\r\n*/\r\n@Component({\r\n\tselector: 'app-register',\r\n\ttemplateUrl: './register.component.html',\r\n\tstyleUrls: ['./register.component.css']\r\n})\r\nexport class RegisterComponent implements OnInit {\r\n\r\n\t// For register()\r\n\tuser: User;\r\n\r\n\tconstructor(private service: ConfigService, private router: Router, private encryptionService: PasswordEncryptionService) {\r\n\t\t// Complains if this is removed, dunno why tbh\r\n\t\tthis.user = new User(undefined, undefined, undefined, undefined, undefined);\r\n\t}\r\n\r\n\tngOnInit(): void {\r\n\t}\r\n\r\n\tregister() {\r\n\t\tconsole.log(\"Register button pressed.\");\r\n\r\n\t\t// Constructs a user object based on input values\r\n\t\tlet email = (<HTMLInputElement>document.getElementById(\"inputEmail\")).value;\r\n\t\tlet password = (<HTMLInputElement>document.getElementById(\"inputPassword\")).value;\r\n\t\tlet firstName = (<HTMLInputElement>document.getElementById(\"inputFirstName\")).value;\r\n\t\tlet lastName = (<HTMLInputElement>document.getElementById(\"inputLastName\")).value;\r\n\t\tlet contact = (<HTMLInputElement>document.getElementById(\"inputContact\")).value;\r\n\t\tthis.user = new User(email, this.encryptionService.encrypt(password), firstName, lastName, contact);\r\n\r\n\t\t// Sanity check\r\n\t\tconsole.log(this.user);\r\n\r\n\t\t// POSTs constructed user to endpoint and routes to the profile view\r\n\t\tthis.service.createUser(this.user).subscribe(data => this.router.navigate([\"/profile\"]));\r\n\r\n\t\t// POSTs user to endpoint and assigns to a local user object\r\n\t\t// this.service.createUser(this.user).subscribe(data => { this.user = data });\r\n\t}\r\n}\r\n","<div class=\"container-fluid\">\r\n\t<div class=\"row no-gutter\">\r\n\t\t<!-- LEFT HALF -->\r\n\t\t<div class=\"col-md-6 d-none d-md-flex bg-image\"></div>\r\n\r\n\t\t<!-- RIGHT HALF -->\r\n\t\t<div class=\"col-md-6 bg-light\">\r\n\t\t\t<div class=\"register d-flex align-items-center\">\r\n\r\n\t\t\t\t<!-- REGISTER-->\r\n\t\t\t\t<div class=\"container\">\r\n\t\t\t\t\t<div class=\"row\">\r\n\t\t\t\t\t\t<div class=\"col-lg-10 col-xl-8 mx-auto\">\r\n\t\t\t\t\t\t\t<p class=\"display-4\">Register</p>\r\n\t\t\t\t\t\t\t<form>\r\n\t\t\t\t\t\t\t\t<!-- INPUT FIELDS -->\r\n\t\t\t\t\t\t\t\t<div class=\"form-group\">\r\n\t\t\t\t\t\t\t\t\t<input [(ngModel)]=\"user.email\" #email=\"ngModel\" name=\"inputEmail\" id=\"inputEmail\" type=\"email\" placeholder=\"Email address\" class=\"form-control rounded-pill border-0 shadow px-4\" required>\r\n\t\t\t\t\t\t\t\t\t<div *ngIf=\"email.invalid && (email.dirty || email.touched)\" class=\"alert alert-danger rounded-pill border-0 shadow m-1\">\r\n\t\t\t\t\t\t\t\t\t\t<div *ngIf=\"email.errors.required\">\r\n\t\t\t\t\t\t\t\t\t\t\tEmail is required!\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t<div class=\"form-group\">\r\n\t\t\t\t\t\t\t\t\t<input [(ngModel)]=\"user.password\" #password=\"ngModel\" name=\"inputPassword\" id=\"inputPassword\" type=\"password\" placeholder=\"Password\" class=\"form-control rounded-pill border-0 shadow px-4\" required>\r\n\t\t\t\t\t\t\t\t\t<div *ngIf=\"password.invalid && (password.dirty || password.touched)\" class=\"alert alert-danger rounded-pill border-0 shadow m-1\">\r\n\t\t\t\t\t\t\t\t\t\t<div *ngIf=\"password.errors.required\">\r\n\t\t\t\t\t\t\t\t\t\t\tPassword is required!\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t<div class=\"form-group\">\r\n\t\t\t\t\t\t\t\t\t<input [(ngModel)]=\"user.firstName\" #firstName=\"ngModel\" name=\"inputFirstName\" id=\"inputFirstName\" type=\"text\" placeholder=\"First name\" class=\"form-control rounded-pill border-0 shadow px-4\" required>\r\n\t\t\t\t\t\t\t\t\t<div *ngIf=\"firstName.invalid && (firstName.dirty || firstName.touched)\" class=\"alert alert-danger rounded-pill border-0 shadow m-1\">\r\n\t\t\t\t\t\t\t\t\t\t<div *ngIf=\"firstName.errors.required\">\r\n\t\t\t\t\t\t\t\t\t\t\tFirst name is required!\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t<div class=\"form-group\">\r\n\t\t\t\t\t\t\t\t\t<input [(ngModel)]=\"user.lastName\" #lastName=\"ngModel\" name=\"inputLastName\" id=\"inputLastName\" type=\"text\" placeholder=\"Last name\" class=\"form-control rounded-pill border-0 shadow px-4\" required>\r\n\t\t\t\t\t\t\t\t\t<div *ngIf=\"lastName.invalid && (lastName.dirty || lastName.touched)\" class=\"alert alert-danger rounded-pill border-0 shadow m-1\">\r\n\t\t\t\t\t\t\t\t\t\t<div *ngIf=\"lastName.errors.required\">\r\n\t\t\t\t\t\t\t\t\t\t\tLast name is required!\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t<div class=\"form-group\">\r\n\t\t\t\t\t\t\t\t\t<input [(ngModel)]=\"user.contact\" #contact=\"ngModel\" name=\"inputContact\" id=\"inputContact\" type=\"text\" placeholder=\"Phone number\" class=\"form-control rounded-pill border-0 shadow px-4\" pattern=\"[0-9]{10}\" required>\r\n\t\t\t\t\t\t\t\t\t<div *ngIf=\"contact.invalid && (contact.dirty || contact.touched)\" class=\"alert alert-danger rounded-pill border-0 shadow m-1\">\r\n\t\t\t\t\t\t\t\t\t\t<div *ngIf=\"contact.errors.required\">\r\n\t\t\t\t\t\t\t\t\t\t\tPhone number is required!\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t\t<!-- BUTTONS -->\r\n\t\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t\t<button (click)=\"register()\" class=\"btn btn-primary btn-block text-uppercase rounded-pill border-0 shadow mt-4\" type=\"submit\">Sign Up</button>\r\n\t\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t\t<!-- ROUTING -->\r\n\t\t\t\t\t\t\t\t<div class=\"text-center justify-content-between mt-4\">\r\n\t\t\t\t\t\t\t\t\t<p>\r\n\t\t\t\t\t\t\t\t\t\tHave an account? <a [routerLink]=\"['/login']\" routerLinkActive=\"router-link-active\" class=\"font-italic text-muted\">Login</a>\r\n\t\t\t\t\t\t\t\t\t</p>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</form>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t</div>\r\n</div>","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpHeaders, HttpParams } from '@angular/common/http';\r\nimport { Observable, throwError } from 'rxjs'; // HttpClient makes use of observables for all transactions\r\nimport { catchError, retry } from 'rxjs/operators';\r\nimport { User } from '../class/user/user';\r\n\r\n/*\r\n\tThis service provides CRUD operations via Angular's HttpClient\r\n*/\r\n@Injectable({\r\n\tprovidedIn: 'root'\r\n})\r\nexport class ConfigService {\r\n\r\n\tpublic baseUrl: string;\r\n\r\n\t// Custom HTTP options to throw into CRUD operations\r\n\thttpOptions = {\r\n\t\theaders: new HttpHeaders({\r\n\t\t\t'Content-Type': 'application/json',\r\n\t\t\t'Access-Control-Allow-Origin': '*',\r\n\t\t\t'Authorization': 'authkey',\r\n\t\t\t'userid': '1'\r\n\t\t}),\r\n\t};\r\n\r\n\t// Boots HttpClient upon creation\r\n\tconstructor(private http: HttpClient) {\r\n\t\tthis.baseUrl = \"http://localhost:9999/\"; // sets baseUrl to the \"home\" endpoint\r\n\t}\r\n\r\n\t// READ\r\n\tpublic getUser(): Observable<User[]> {\r\n\t\treturn this.http.get<User[]>(this.baseUrl + \"user/all\", this.httpOptions); // localhost:9999/user/all\r\n\t}\r\n\r\n\tpublic getUserById(id: number): Observable<User> {\r\n\t\treturn this.http.get<User>(this.baseUrl + \"user/\" + id); // localhost:9999/user/{id}\r\n\t}\r\n\r\n\tpublic getUserByEmail(email: string): Observable<User> {\r\n\t\treturn this.http.get<User>(this.baseUrl + \"user/email/\" + email); // localhost:9999/user/email/{email}\r\n\t}\r\n\r\n\t// CREATE\r\n\tpublic createUser(user: User) {\r\n\t\treturn this.http.post<User>(this.baseUrl + \"user\", user, this.httpOptions); // localhost:9999/user\r\n\t}\r\n\r\n\t// UPDATE\r\n\tpublic updateUser(user: User) {\r\n\t\treturn this.http.put<User>(this.baseUrl + \"user\", user); // localhost:9999/user\r\n\t}\r\n\r\n\t// DELETE\r\n\tpublic deleteUserById(id: number) {\r\n\t\treturn this.http.delete<User>(this.baseUrl + \"/user/delete/\" + id) // localhost:9999/user/delete/{id}\r\n\t}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\t// API TESTING (https://rickandmortyapi.com/documentation#character)\r\n\tprivate rmUrl: string;\r\n\tsetUrl(id: number) {\r\n\t\tthis.rmUrl = `https://rickandmortyapi.com/api/character/${id}`;\r\n\t}\r\n\tgetRickMorty(): Observable<RickMorty> {\r\n\t\treturn this.http.get<RickMorty>(this.rmUrl)\r\n\t}\r\n}\r\n\r\n// API TESTING\r\nexport interface RickMorty {\r\n\t\"id\": number;\r\n\t\"name\": string;\r\n\t\"status\": string;\r\n\t\"species\": string;\r\n\t\"type\": string;\r\n\t\"gender\": string;\r\n\t\"origin\": object;\r\n\t\"location\": object;\r\n\t\"image\": string;\r\n\t\"episode\": Array<RickMorty>;\r\n\t\"url\": string;\r\n\t\"created\": string;\r\n}","import { Injectable } from '@angular/core';\r\n//import { SSL_OP_SSLEAY_080_CLIENT_DH_BUG } from 'constants';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class PasswordEncryptionService {\r\n\r\n  constructor() { }\r\n\r\n\r\n  encrypt(password: string) {\r\n    var newPassword: string = \"\";\r\n    var forwards: string = \"ZYXWVUTSRQPONMLKJIHGFEDCBAabcdefghijklmnopqrstuvwxyz0987654321\";\r\n    var backwards: string = \"1234567890zyxwvutsrqponmlkjihgfedcbaABCDEFGHIJKLMNOPQRSTUVWXYZ\";\r\n    var tempIndex: number = 0;\r\n\r\n    for (var i: number = 0; i < password.length; i++) {\r\n      tempIndex = forwards.indexOf(password[i]);\r\n      newPassword += backwards[tempIndex];\r\n      \r\n    }\r\n    console.log(newPassword);\r\n    return newPassword;\r\n\r\n\r\n}\r\n}\r\n","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n"]}