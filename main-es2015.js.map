{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/class/user/user.ts","./src/app/event/event.component.ts","./src/app/event/event.component.html","./src/app/login/login.component.ts","./src/app/login/login.component.html","./src/app/profile/profile.component.ts","./src/app/profile/profile.component.html","./src/app/register/register.component.ts","./src/app/register/register.component.html","./src/app/service/config.service.ts","./src/app/service/password-encryption.service.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule, Component } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { LoginComponent } from './login/login.component';\r\nimport { RegisterComponent } from './register/register.component';\r\nimport { ProfileComponent } from './profile/profile.component';\r\nimport { EventComponent } from './event/event.component';\r\nimport { AppComponent } from './app.component';\r\n\r\nconst routes: Routes = [\r\n\t{ path: 'index', component: AppComponent },\r\n\t{ path: 'register', component: RegisterComponent },\r\n\t{ path: 'login', component: LoginComponent },\r\n\t{ path: 'profile', component: ProfileComponent },\r\n\t{ path: 'event', component: EventComponent }\r\n];\r\n\r\n@NgModule({\r\n\timports: [RouterModule.forRoot(routes)],\r\n\texports: [RouterModule]\r\n})\r\nexport class AppRoutingModule {\r\n}\r\n","import { Component } from '@angular/core';\r\n\r\n// ROOT COMPONENT\r\n@Component({\r\n\tselector: 'app-root',\r\n\ttemplateUrl: './app.component.html',\r\n\tstyleUrls: ['./app.component.css']\r\n})\r\nexport class AppComponent {\r\n\ttitle: 'GatherUp';\r\n}\r\n","<!-- PARENT TEMPLATE -->\r\n<div>\r\n\t<nav class=\"navbar navbar-expand-lg navbar-light bg-light\">\r\n\t\t<a class=\"navbar-brand\" [routerLink]=\"['/']\" routerLinkActive=\"router-link-active\">GatherUp</a>\r\n\t\t<button class=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarNav\" aria-controls=\"navbarNav\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n\t\t\t<span class=\"navbar-toggler-icon\"></span>\r\n\t\t</button>\r\n\t\t<div class=\"collapse navbar-collapse\" id=\"navbarNav\">\r\n\t\t\t<ul class=\"navbar-nav\">\r\n\t\t\t\t<li class=\"nav-item active\">\r\n\t\t\t\t\t<a class=\"nav-link\" [routerLink]=\"['/']\" routerLinkActive=\"router-link-active\">Home <span class=\"sr-only\">(current)</span></a>\r\n\t\t\t\t</li>\r\n\t\t\t\t<li class=\"nav-item\">\r\n\t\t\t\t\t<a class=\"nav-link\" [routerLink]=\"['/register']\" routerLinkActive=\"router-link-active\">Register</a>\r\n\t\t\t\t</li>\r\n\t\t\t\t<li class=\"nav-item\">\r\n\t\t\t\t\t<a class=\"nav-link\" [routerLink]=\"['/login']\" routerLinkActive=\"router-link-active\">Login</a>\r\n\t\t\t\t</li>\r\n\t\t\t\t<li class=\"nav-item\">\r\n\t\t\t\t\t<a class=\"nav-link\" [routerLink]=\"['/profile']\" routerLinkActive=\"router-link-active\">Profile</a>\r\n\t\t\t\t</li>\r\n\t\t\t\t<li class=\"nav-item\">\r\n\t\t\t\t\t<a class=\"nav-link\" [routerLink]=\"['/event']\" routerLinkActive=\"router-link-active\">Events</a>\r\n\t\t\t\t</li>\r\n\t\t\t</ul>\r\n\t\t</div>\r\n\t</nav>\r\n\t<div class=\"container\">\r\n\t\t<router-outlet></router-outlet>\r\n\t</div>\r\n</div>","import { NgModule } from '@angular/core';\r\nimport { BrowserModule } from '@angular/platform-browser';\r\nimport { FormsModule } from '@angular/forms'; // enables form features for app\r\nimport { HttpClientModule } from '@angular/common/http'; // enables HTTP functionality for app\r\nimport { AppRoutingModule } from './app-routing.module'; // enables routing functionality for app\r\n\r\nimport { AppComponent } from './app.component';\r\nimport { RegisterComponent } from './register/register.component';\r\nimport { LoginComponent } from './login/login.component';\r\nimport { ProfileComponent } from './profile/profile.component';\r\nimport { EventComponent } from './event/event.component';\r\nimport { ConfigService } from './service/config.service';\r\nimport { PasswordEncryptionService } from './service/password-encryption.service';\r\n\r\n// ROOT MODULE\r\n@NgModule({\r\n\tdeclarations: [\r\n\t\tAppComponent,\r\n\t\tRegisterComponent,\r\n\t\tLoginComponent,\r\n\t\tProfileComponent,\r\n\t\tEventComponent\r\n\t],\r\n\timports: [\r\n\t\tBrowserModule,\r\n\t\tFormsModule,\r\n\t\tHttpClientModule,\r\n\t\tAppRoutingModule,\r\n\t],\r\n\tproviders: [ConfigService, PasswordEncryptionService], // make providers global\r\n\tbootstrap: [AppComponent]\r\n})\r\nexport class AppModule {\r\n}\r\n","export class User {\r\n\r\n\temail: string; // will act as primary key; will be a foreign key when we associate users with their bucket list items\r\n\tpassword: string;\r\n\tfirstName: string;\r\n\tlastName: string;\r\n\tcontact: string;\r\n\r\n\tconstructor(email: string, password: string, firstName: string, lastName: string, contact: string) {\r\n\t\tthis.email = email;\r\n\t\tthis.password = password;\r\n\t\tthis.firstName = firstName;\r\n\t\tthis.lastName = lastName;\r\n\t\tthis.contact = contact;\r\n\t}\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n\tselector: 'app-event',\r\n\ttemplateUrl: './event.component.html',\r\n\tstyleUrls: ['./event.component.css']\r\n})\r\nexport class EventComponent implements OnInit {\r\n\r\n\tconstructor() {\r\n\t}\r\n\r\n\tngOnInit(): void {\r\n\t}\r\n\r\n\t// TODO: implement buttons to create, modify, and delete bucket list items\r\n}\r\n","<div class=\"container p-2\" id=\"box\">\r\n\t<!-- Event Heading -->\r\n\t<h1 class=\"jumbotron m-4\">Bucket List</h1>\r\n\r\n\t<!-- Event Row -->\r\n\t<div class=\"row\">\r\n\t\t<div class=\"col-8\">\r\n\t\t\t<img class=\"img-fluid m-4\" src=\"https://w.wallhaven.cc/full/2e/wallhaven-2evd36.jpg\" alt=\"Event Image\" width=\"100%\">\r\n\t\t</div>\r\n\t\t<div class=\"col-4\">\r\n\t\t\t<h2 class=\"m-4\">To Do</h2>\r\n\t\t\t<ul>\r\n\t\t\t\t<li>Lorem Ipsum</li>\r\n\t\t\t\t<li>Dolor Sit Amet</li>\r\n\t\t\t\t<li>Consectetur</li>\r\n\t\t\t\t<li>Adipiscing Elit</li>\r\n\t\t\t\t<li>Lorem Ipsum</li>\r\n\t\t\t\t<li>Dolor Sit Amet</li>\r\n\t\t\t\t<li>Consectetur</li>\r\n\t\t\t\t<li>Adipiscing Elit</li>\r\n\t\t\t\t<li>Lorem Ipsum</li>\r\n\t\t\t\t<li>Dolor Sit Amet</li>\r\n\t\t\t\t<li>Consectetur</li>\r\n\t\t\t\t<li>Adipiscing Elit</li>\r\n\t\t\t</ul>\r\n\t\t</div>\r\n\t</div>\r\n</div>","import { Component, OnInit } from '@angular/core';\r\nimport { User } from '../class/user/user';\r\nimport { ConfigService } from '../service/config.service';\r\nimport { Router } from '@angular/router';\r\nimport { PasswordEncryptionService } from '../service/password-encryption.service';\r\n\r\n@Component({\r\n\tselector: 'app-login',\r\n\ttemplateUrl: './login.component.html',\r\n\tstyleUrls: ['./login.component.css']\r\n})\r\nexport class LoginComponent implements OnInit {\r\n\r\n\t// For login()\r\n\tuser: User;\r\n\r\n\tconstructor(private service: ConfigService, private router: Router, private encryptionService: PasswordEncryptionService) {\r\n\t\t// Complains if this is removed, dunno why tbh\r\n\t\tthis.user = new User(undefined, undefined, undefined, undefined, undefined);\r\n\t}\r\n\r\n\tngOnInit(): void {\r\n\t}\r\n\r\n\tlogin() {\r\n\t\tconsole.log(\"Login button pressed.\");\r\n\r\n\t\t// Constructs a user object to validate credentials\r\n\t\tlet email = (<HTMLInputElement>document.getElementById(\"inputEmail\")).value;\r\n\t\tlet password = (<HTMLInputElement>document.getElementById(\"inputPassword\")).value;\r\n\t\tthis.user = new User(email, this.encryptionService.encrypt(password), undefined, undefined, undefined);\r\n\r\n\t\t// Sanity check\r\n\t\tconsole.log(this.user);\r\n\r\n\t\t// Validates against hard-coded credentials\r\n\t\tif (this.user.email == \"hello@world.com\" && this.user.password == \"p4ssw0rd\") {\r\n\t\t\talert('Login success!\\n\\n' + JSON.stringify(this.user, null, 4));\r\n\t\t\tlocation.href = \"/profile\"; // routes accordingly\r\n\t\t} else {\r\n\t\t\talert(\"Invalid credentials!\")\r\n\t\t}\r\n\r\n\t\t// TODO: validate against database credentials\r\n\t}\r\n}\r\n","<div class=\"container-fluid\">\r\n\t<div class=\"row no-gutter\">\r\n\t\t<!-- LEFT HALF -->\r\n\t\t<div class=\"col-md-6 d-none d-md-flex bg-image\"></div>\r\n\r\n\t\t<!-- RIGHT HALF -->\r\n\t\t<div class=\"col-md-6 bg-light\">\r\n\t\t\t<div class=\"login d-flex align-items-center\">\r\n\r\n\t\t\t\t<!-- LOGIN-->\r\n\t\t\t\t<div class=\"container\">\r\n\t\t\t\t\t<div class=\"row\">\r\n\t\t\t\t\t\t<div class=\"col-lg-10 col-xl-8 mx-auto\">\r\n\t\t\t\t\t\t\t<h3 class=\"display-4\">Login</h3>\r\n\t\t\t\t\t\t\t<form>\r\n\t\t\t\t\t\t\t\t<!-- INPUT FIELDS -->\r\n\t\t\t\t\t\t\t\t<div class=\"form-group\">\r\n\t\t\t\t\t\t\t\t\t<input [(ngModel)]=\"user.email\" #email=\"ngModel\" name=\"inputEmail\" id=\"inputEmail\" type=\"email\" placeholder=\"Email address\" class=\"form-control rounded-pill border-0 shadow my-3 px-4\" required>\r\n\t\t\t\t\t\t\t\t\t<div *ngIf=\"email.invalid && (email.dirty || email.touched)\" class=\"alert alert-danger rounded-pill border-0 shadow m-1\">\r\n\t\t\t\t\t\t\t\t\t\t<div *ngIf=\"email.errors.required\">Email is required!</div>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t<div class=\"form-group\">\r\n\t\t\t\t\t\t\t\t\t<input [(ngModel)]=\"user.password\" #password=\"ngModel\" name=\"inputPassword\" id=\"inputPassword\" type=\"password\" placeholder=\"Password\" class=\"form-control rounded-pill border-0 shadow my-3 px-4\" required>\r\n\t\t\t\t\t\t\t\t\t<div *ngIf=\"password.invalid && (password.dirty || password.touched)\" class=\"alert alert-danger rounded-pill border-0 shadow m-1\">\r\n\t\t\t\t\t\t\t\t\t\t<div *ngIf=\"password.errors.required\">\r\n\t\t\t\t\t\t\t\t\t\t\tPassword is required!\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t\t<!-- BUTTONS -->\r\n\t\t\t\t\t\t\t\t<button (click)=\"login()\" class=\"btn btn-primary btn-block text-uppercase rounded-pill border-0 shadow mt-4\" type=\"submit\">Sign In</button>\r\n\r\n\t\t\t\t\t\t\t\t<!-- ROUTING -->\r\n\t\t\t\t\t\t\t\t<div class=\"text-center justify-content-between mt-4\">\r\n\t\t\t\t\t\t\t\t\t<p>\r\n\t\t\t\t\t\t\t\t\t\tNew user? <a [routerLink]=\"['/register']\" routerLinkActive=\"router-link-active\" class=\"font-italic text-muted\">Register</a>\r\n\t\t\t\t\t\t\t\t\t</p>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</form>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t</div>\r\n</div>","import { Component, OnInit } from '@angular/core';\r\nimport { ConfigService, RickMorty } from '../service/config.service';\r\nimport { User } from '../class/user/user';\r\n\r\n@Component({\r\n\tselector: 'app-profile',\r\n\ttemplateUrl: './profile.component.html',\r\n\tstyleUrls: ['./profile.component.css']\r\n})\r\nexport class ProfileComponent implements OnInit {\r\n\r\n\tuser: User[];\r\n\r\n\tconstructor(private service: ConfigService) {\r\n\t}\r\n\r\n\tngOnInit(): void {\r\n\t\t// Upon initialization, fetches user from endpoint and inserts into user array\r\n\t\tthis.service.getUser().subscribe(data => { this.user = data; });\r\n\t}\r\n}\r\n","<div class=\"container\">\r\n\t<div class=\"card\">\r\n\t\t<div class=\"card-body\">\r\n\t\t\t<!-- INFORMATION -->\r\n\t\t\t<div class=\"text-left\">\r\n\t\t\t\t<div *ngFor=\"let user of user\">\r\n\t\t\t\t\t<p>Email: {{user?.email}}</p>\r\n\t\t\t\t\t<p>Password: {{user?.password}}</p>\r\n\t\t\t\t\t<p>First Name: {{user?.firstName}}</p>\r\n\t\t\t\t\t<p>Last Name: {{user?.lastName}}</p>\r\n\t\t\t\t\t<p>Contact: {{user?.contact}}</p>\r\n\r\n\t\t\t\t\t<br>\r\n\r\n\t\t\t\t\t<!-- Note: to print response as JSON, use the built in json pipe -->\r\n\t\t\t\t\t<p>User: {{user | json}}</p>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t</div>\r\n</div>","import { Component, OnInit } from '@angular/core';\r\nimport { User } from '../class/user/user';\r\nimport { ConfigService } from '../service/config.service';\r\nimport { Router } from '@angular/router';\r\nimport { HttpHeaders } from '@angular/common/http';\r\nimport { PasswordEncryptionService } from '../service/password-encryption.service';\r\n\r\n/* \r\n\tThis component maps input values to a JavaScript object and passes it to Java via our service's CRUD methods\r\n*/\r\n@Component({\r\n\tselector: 'app-register',\r\n\ttemplateUrl: './register.component.html',\r\n\tstyleUrls: ['./register.component.css']\r\n})\r\nexport class RegisterComponent implements OnInit {\r\n\r\n\t// For register()\r\n\tuser: User;\r\n\r\n\tconstructor(private service: ConfigService, private router: Router, private encryptionService: PasswordEncryptionService) {\r\n\t\t// Complains if this is removed, dunno why tbh\r\n\t\tthis.user = new User(undefined, undefined, undefined, undefined, undefined);\r\n\t}\r\n\r\n\tngOnInit(): void {\r\n\t}\r\n\r\n\tregister() {\r\n\t\tconsole.log(\"Register button pressed.\");\r\n\r\n\t\t// Constructs a user object based on input values\r\n\t\tlet email = (<HTMLInputElement>document.getElementById(\"inputEmail\")).value;\r\n\t\tlet password = (<HTMLInputElement>document.getElementById(\"inputPassword\")).value;\r\n\t\tlet firstName = (<HTMLInputElement>document.getElementById(\"inputFirstName\")).value;\r\n\t\tlet lastName = (<HTMLInputElement>document.getElementById(\"inputLastName\")).value;\r\n\t\tlet contact = (<HTMLInputElement>document.getElementById(\"inputContact\")).value;\r\n\t\tthis.user = new User(email, this.encryptionService.encrypt(password), firstName, lastName, contact);\r\n\r\n\t\t// Sanity check\r\n\t\tconsole.log(this.user);\r\n\r\n\t\t// POSTs constructed user to endpoint and routes to the profile view\r\n\t\tthis.service.createUser(this.user).subscribe(data => this.router.navigate([\"/profile\"]));\r\n\r\n\t\t// POSTs user to endpoint and assigns to a local user object\r\n\t\t// this.service.createUser(this.user).subscribe(data => { this.user = data });\r\n\t}\r\n}\r\n","<div class=\"container-fluid\">\r\n\t<div class=\"row no-gutter\">\r\n\t\t<!-- LEFT HALF -->\r\n\t\t<div class=\"col-md-6 d-none d-md-flex bg-image\"></div>\r\n\r\n\t\t<!-- RIGHT HALF -->\r\n\t\t<div class=\"col-md-6 bg-light\">\r\n\t\t\t<div class=\"register d-flex align-items-center\">\r\n\r\n\t\t\t\t<!-- REGISTER-->\r\n\t\t\t\t<div class=\"container\">\r\n\t\t\t\t\t<div class=\"row\">\r\n\t\t\t\t\t\t<div class=\"col-lg-10 col-xl-8 mx-auto\">\r\n\t\t\t\t\t\t\t<p class=\"display-4\">Register</p>\r\n\t\t\t\t\t\t\t<form>\r\n\t\t\t\t\t\t\t\t<!-- INPUT FIELDS -->\r\n\t\t\t\t\t\t\t\t<div class=\"form-group\">\r\n\t\t\t\t\t\t\t\t\t<input [(ngModel)]=\"user.email\" #email=\"ngModel\" name=\"inputEmail\" id=\"inputEmail\" type=\"email\" placeholder=\"Email address\" class=\"form-control rounded-pill border-0 shadow px-4\" required>\r\n\t\t\t\t\t\t\t\t\t<div *ngIf=\"email.invalid && (email.dirty || email.touched)\" class=\"alert alert-danger rounded-pill border-0 shadow m-1\">\r\n\t\t\t\t\t\t\t\t\t\t<div *ngIf=\"email.errors.required\">\r\n\t\t\t\t\t\t\t\t\t\t\tEmail is required!\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t<div class=\"form-group\">\r\n\t\t\t\t\t\t\t\t\t<input [(ngModel)]=\"user.password\" #password=\"ngModel\" name=\"inputPassword\" id=\"inputPassword\" type=\"password\" placeholder=\"Password\" class=\"form-control rounded-pill border-0 shadow px-4\" required>\r\n\t\t\t\t\t\t\t\t\t<div *ngIf=\"password.invalid && (password.dirty || password.touched)\" class=\"alert alert-danger rounded-pill border-0 shadow m-1\">\r\n\t\t\t\t\t\t\t\t\t\t<div *ngIf=\"password.errors.required\">\r\n\t\t\t\t\t\t\t\t\t\t\tPassword is required!\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t<div class=\"form-group\">\r\n\t\t\t\t\t\t\t\t\t<input [(ngModel)]=\"user.firstName\" #firstName=\"ngModel\" name=\"inputFirstName\" id=\"inputFirstName\" type=\"text\" placeholder=\"First name\" class=\"form-control rounded-pill border-0 shadow px-4\" required>\r\n\t\t\t\t\t\t\t\t\t<div *ngIf=\"firstName.invalid && (firstName.dirty || firstName.touched)\" class=\"alert alert-danger rounded-pill border-0 shadow m-1\">\r\n\t\t\t\t\t\t\t\t\t\t<div *ngIf=\"firstName.errors.required\">\r\n\t\t\t\t\t\t\t\t\t\t\tFirst name is required!\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t<div class=\"form-group\">\r\n\t\t\t\t\t\t\t\t\t<input [(ngModel)]=\"user.lastName\" #lastName=\"ngModel\" name=\"inputLastName\" id=\"inputLastName\" type=\"text\" placeholder=\"Last name\" class=\"form-control rounded-pill border-0 shadow px-4\" required>\r\n\t\t\t\t\t\t\t\t\t<div *ngIf=\"lastName.invalid && (lastName.dirty || lastName.touched)\" class=\"alert alert-danger rounded-pill border-0 shadow m-1\">\r\n\t\t\t\t\t\t\t\t\t\t<div *ngIf=\"lastName.errors.required\">\r\n\t\t\t\t\t\t\t\t\t\t\tLast name is required!\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t<div class=\"form-group\">\r\n\t\t\t\t\t\t\t\t\t<input [(ngModel)]=\"user.contact\" #contact=\"ngModel\" name=\"inputContact\" id=\"inputContact\" type=\"text\" placeholder=\"Phone number\" class=\"form-control rounded-pill border-0 shadow px-4\" pattern=\"[0-9]{10}\" required>\r\n\t\t\t\t\t\t\t\t\t<div *ngIf=\"contact.invalid && (contact.dirty || contact.touched)\" class=\"alert alert-danger rounded-pill border-0 shadow m-1\">\r\n\t\t\t\t\t\t\t\t\t\t<div *ngIf=\"contact.errors.required\">\r\n\t\t\t\t\t\t\t\t\t\t\tPhone number is required!\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t\t<!-- BUTTONS -->\r\n\t\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t\t<button (click)=\"register()\" class=\"btn btn-primary btn-block text-uppercase rounded-pill border-0 shadow mt-4\" type=\"submit\">Sign Up</button>\r\n\t\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t\t<!-- ROUTING -->\r\n\t\t\t\t\t\t\t\t<div class=\"text-center justify-content-between mt-4\">\r\n\t\t\t\t\t\t\t\t\t<p>\r\n\t\t\t\t\t\t\t\t\t\tHave an account? <a [routerLink]=\"['/login']\" routerLinkActive=\"router-link-active\" class=\"font-italic text-muted\">Login</a>\r\n\t\t\t\t\t\t\t\t\t</p>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</form>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t</div>\r\n</div>","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpHeaders, HttpParams } from '@angular/common/http';\r\nimport { Observable, throwError } from 'rxjs'; // HttpClient makes use of observables for all transactions\r\nimport { catchError, retry } from 'rxjs/operators';\r\nimport { User } from '../class/user/user';\r\n\r\n/*\r\n\tThis service provides CRUD operations via Angular's HttpClient\r\n*/\r\n@Injectable({\r\n\tprovidedIn: 'root'\r\n})\r\nexport class ConfigService {\r\n\r\n\tpublic baseUrl: string;\r\n\r\n\t// Custom HTTP options to throw into CRUD operations\r\n\thttpOptions = {\r\n\t\theaders: new HttpHeaders({\r\n\t\t\t'Content-Type': 'application/json',\r\n\t\t\t'Access-Control-Allow-Origin': '*',\r\n\t\t\t'Authorization': 'authkey',\r\n\t\t\t'userid': '1'\r\n\t\t}),\r\n\t};\r\n\r\n\t// Boots HttpClient upon creation\r\n\tconstructor(private http: HttpClient) {\r\n\t\tthis.baseUrl = \"http://localhost:9999/\"; // sets baseUrl to the \"home\" endpoint\r\n\t}\r\n\r\n\t// READ\r\n\tpublic getUser(): Observable<User[]> {\r\n\t\treturn this.http.get<User[]>(this.baseUrl + \"user/all\", this.httpOptions); // localhost:9999/user/all\r\n\t}\r\n\r\n\tpublic getUserById(id: number): Observable<User> {\r\n\t\treturn this.http.get<User>(this.baseUrl + \"user/\" + id); // localhost:9999/user/{id}\r\n\t}\r\n\r\n\tpublic getUserByEmail(email: string): Observable<User> {\r\n\t\treturn this.http.get<User>(this.baseUrl + \"user/email/\" + email); // localhost:9999/user/email/{email}\r\n\t}\r\n\r\n\t// CREATE\r\n\tpublic createUser(user: User) {\r\n\t\treturn this.http.post<User>(this.baseUrl + \"user\", user, this.httpOptions); // localhost:9999/user\r\n\t}\r\n\r\n\t// UPDATE\r\n\tpublic updateUser(user: User) {\r\n\t\treturn this.http.put<User>(this.baseUrl + \"user\", user); // localhost:9999/user\r\n\t}\r\n\r\n\t// DELETE\r\n\tpublic deleteUserById(id: number) {\r\n\t\treturn this.http.delete<User>(this.baseUrl + \"/user/delete/\" + id) // localhost:9999/user/delete/{id}\r\n\t}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\t// API TESTING (https://rickandmortyapi.com/documentation#character)\r\n\tprivate rmUrl: string;\r\n\tsetUrl(id: number) {\r\n\t\tthis.rmUrl = `https://rickandmortyapi.com/api/character/${id}`;\r\n\t}\r\n\tgetRickMorty(): Observable<RickMorty> {\r\n\t\treturn this.http.get<RickMorty>(this.rmUrl)\r\n\t}\r\n}\r\n\r\n// API TESTING\r\nexport interface RickMorty {\r\n\t\"id\": number;\r\n\t\"name\": string;\r\n\t\"status\": string;\r\n\t\"species\": string;\r\n\t\"type\": string;\r\n\t\"gender\": string;\r\n\t\"origin\": object;\r\n\t\"location\": object;\r\n\t\"image\": string;\r\n\t\"episode\": Array<RickMorty>;\r\n\t\"url\": string;\r\n\t\"created\": string;\r\n}","import { Injectable } from '@angular/core';\r\n//import { SSL_OP_SSLEAY_080_CLIENT_DH_BUG } from 'constants';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class PasswordEncryptionService {\r\n\r\n  constructor() { }\r\n\r\n\r\n  encrypt(password: string) {\r\n    var newPassword: string = \"\";\r\n    var forwards: string = \"ZYXWVUTSRQPONMLKJIHGFEDCBAabcdefghijklmnopqrstuvwxyz0987654321\";\r\n    var backwards: string = \"1234567890zyxwvutsrqponmlkjihgfedcbaABCDEFGHIJKLMNOPQRSTUVWXYZ\";\r\n    var tempIndex: number = 0;\r\n\r\n    for (var i: number = 0; i < password.length; i++) {\r\n      tempIndex = forwards.indexOf(password[i]);\r\n      newPassword += backwards[tempIndex];\r\n      \r\n    }\r\n    console.log(newPassword);\r\n    return newPassword;\r\n\r\n\r\n}\r\n}\r\n","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n"],"sourceRoot":"webpack:///"}