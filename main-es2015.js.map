{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/class/event/event.ts","./src/app/class/user/user.ts","./src/app/event/event.component.ts","./src/app/event/event.component.html","./src/app/eventview/eventview.component.ts","./src/app/eventview/eventview.component.html","./src/app/login/login.component.ts","./src/app/login/login.component.html","./src/app/profile/profile.component.ts","./src/app/profile/profile.component.html","./src/app/register/register.component.ts","./src/app/register/register.component.html","./src/app/service/config.service.ts","./src/app/service/event.service.ts","./src/app/service/password-encryption.service.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule, Component } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { LoginComponent } from './login/login.component';\r\nimport { RegisterComponent } from './register/register.component';\r\nimport { ProfileComponent } from './profile/profile.component';\r\nimport { EventComponent } from './event/event.component';\r\nimport { EventviewComponent } from './eventview/eventview.component';\r\n\r\nconst routes: Routes = [\r\n\t{ path: '', component: LoginComponent },\r\n\t{ path: 'register', component: RegisterComponent },\r\n\t{ path: 'login', component: LoginComponent },\r\n\t{ path: 'profile', component: ProfileComponent },\r\n\t{ path: 'event', component: EventComponent },\r\n\t{ path: 'eventview', component: EventviewComponent },\r\n];\r\n\r\n@NgModule({\r\n\timports: [RouterModule.forRoot(routes)],\r\n\texports: [RouterModule]\r\n})\r\nexport class AppRoutingModule {\r\n}\r\n","import { Component } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\n\r\nimport { ConfigService } from './service/config.service';\r\nimport { EventService } from './service/event.service';\r\n\r\n@Component({\r\n\tselector: 'app-root',\r\n\ttemplateUrl: './app.component.html',\r\n\tstyleUrls: ['./app.component.css']\r\n})\r\nexport class AppComponent {\r\n\r\n\ttitle: 'GatherUp';\r\n\tsubTitle: 'Not a Meetup Clone';\r\n\r\n\tsessionKey: string;\r\n\r\n\tconstructor(private router: Router, private configService: ConfigService, private eventService: EventService) {\r\n\t}\r\n\r\n\tngOnInit() {\r\n\t\tthis.sessionKey = sessionStorage.getItem(\"email\");\r\n\t\tconsole.log(\"AppComponent sessionKey: \" + this.sessionKey);\r\n\t}\r\n\r\n\tlogOut() {\r\n\t\tconsole.log(\"--- logOut() button clicked ---\");\r\n\r\n\t\t// Removes all saved data from session\r\n\t\tlet sessionKey = sessionStorage.getItem(\"email\");\r\n\t\tconsole.log(\"sessionKey: \" + sessionKey);\r\n\t\tsessionStorage.clear();\r\n\r\n\t\t// Tests if key still remains\r\n\t\tlet clearedKey = sessionStorage.getItem(\"email\");\r\n\t\tconsole.log(\"clearedKey: \" + clearedKey);\r\n\r\n\t\t// Routes\r\n\t\twindow.location.assign(\"/login\");\r\n\t}\r\n}\r\n","<div>\r\n\t<nav class=\"navbar navbar-expand-lg navbar-light bg-light\">\r\n\t\t<a class=\"navbar-brand\">GatherUp</a>\r\n\t\t<button class=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarNav\" aria-controls=\"navbarNav\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n\t\t\t<span class=\"navbar-toggler-icon\"></span>\r\n\t\t</button>\r\n\t\t<div class=\"collapse navbar-collapse\" id=\"navbarNav\">\r\n\t\t\t<ul class=\"navbar-nav\">\r\n\t\t\t\t<li class=\"nav-item\" *ngIf=\"!sessionKey\">\r\n\t\t\t\t\t<a class=\"nav-link\" [routerLink]=\"['/register']\" routerLinkActive=\"router-link-active\">Register</a>\r\n\t\t\t\t</li>\r\n\t\t\t\t<li class=\"nav-item\" *ngIf=\"!sessionKey\">\r\n\t\t\t\t\t<a class=\"nav-link\" [routerLink]=\"['/login']\" routerLinkActive=\"router-link-active\">Login</a>\r\n\t\t\t\t</li>\r\n\t\t\t\t<li class=\"nav-item\" *ngIf=\"sessionKey\">\r\n\t\t\t\t\t<a class=\"nav-link\" [routerLink]=\"['/profile']\" routerLinkActive=\"router-link-active\">Profile</a>\r\n\t\t\t\t</li>\r\n\t\t\t\t<li class=\"nav-item\" *ngIf=\"sessionKey\">\r\n\t\t\t\t\t<a class=\"nav-link\" [routerLink]=\"['/eventview']\" routerLinkActive=\"router-link-active\">Event View</a>\r\n\t\t\t\t</li>\r\n\t\t\t\t<li class=\"nav-item\" *ngIf=\"sessionKey\">\r\n\t\t\t\t\t<a class=\"nav-link\" [routerLink]=\"['/event']\" routerLinkActive=\"router-link-active\">Add Event</a>\r\n\t\t\t\t</li>\r\n\t\t\t\t<li class=\"nav-item\" *ngIf=\"sessionKey\">\r\n\t\t\t\t\t<a class=\"nav-link\" (click)=\"logOut()\" [routerLink]=\"['/login']\" routerLinkActive=\"router-link-active\">Log Out</a>\r\n\t\t\t\t</li>\r\n\t\t\t</ul>\r\n\t\t</div>\r\n\t</nav>\r\n\t<div class=\"container\">\r\n\t\t<router-outlet></router-outlet>\r\n\t</div>\r\n</div>","import { NgModule } from '@angular/core';\r\nimport { BrowserModule } from '@angular/platform-browser';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { HttpClientModule } from '@angular/common/http';\r\nimport { AppRoutingModule } from './app-routing.module';\r\n\r\nimport { AppComponent } from './app.component';\r\nimport { RegisterComponent } from './register/register.component';\r\nimport { LoginComponent } from './login/login.component';\r\nimport { ProfileComponent } from './profile/profile.component';\r\nimport { EventComponent } from './event/event.component';\r\nimport { ConfigService } from './service/config.service';\r\nimport { EventService } from './service/event.service';\r\nimport { PasswordEncryptionService } from './service/password-encryption.service';\r\nimport { EventviewComponent } from './eventview/eventview.component';\r\n\r\n@NgModule({\r\n\tdeclarations: [\r\n\t\tAppComponent,\r\n\t\tRegisterComponent,\r\n\t\tLoginComponent,\r\n\t\tProfileComponent,\r\n\t\tEventComponent,\r\n\t\tEventviewComponent\r\n\t],\r\n\timports: [\r\n\t\tBrowserModule,\r\n\t\tFormsModule,\r\n\t\tHttpClientModule,\r\n\t\tAppRoutingModule,\r\n\t],\r\n\tproviders: [\r\n\t\tConfigService,\r\n\t\tEventService,\r\n\t\tPasswordEncryptionService\r\n\t],\r\n\tbootstrap: [AppComponent]\r\n})\r\nexport class AppModule {\r\n}\r\n","export class Event {\r\n\r\n\tuserEmail: string; // FK to associate events with their users\r\n\teventID: number;\r\n\teventName: string\r\n\teventDescription: string;\r\n\teventLocation: string;\r\n\tdateTime: string;\r\n\teventType: string;\r\n\r\n\tconstructor(userEmail: string, eventID: number, eventName: string, eventDescription: string, eventLocation: string, dateTime: string, eventType: string) {\r\n\t\tthis.userEmail = userEmail;\r\n\t\tthis.eventID = eventID;\r\n\t\tthis.eventName = eventName;\r\n\t\tthis.eventDescription = eventDescription;\r\n\t\tthis.eventLocation = eventLocation;\r\n\t\tthis.dateTime = dateTime;\r\n\t\tthis.eventType = eventType;\r\n\t}\r\n}\r\n","export class User {\r\n\r\n\tid: number;\r\n\temail: string; // PK to associate users with their events\r\n\tpassword: string;\r\n\tfirstName: string;\r\n\tlastName: string;\r\n\tcontact: string;\r\n\r\n\tconstructor(id: number, email: string, password: string, firstName: string, lastName: string, contact: string) {\r\n\t\tthis.id = id;\r\n\t\tthis.email = email;\r\n\t\tthis.password = password;\r\n\t\tthis.firstName = firstName;\r\n\t\tthis.lastName = lastName;\r\n\t\tthis.contact = contact;\r\n\t}\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\nimport { Event } from '../class/event/event';\r\nimport { EventService } from '../service/event.service';\r\nimport { Observable } from 'rxjs';\r\nimport { Router } from '@angular/router';\r\n\r\n@Component({\r\n\tselector: 'app-event',\r\n\ttemplateUrl: './event.component.html',\r\n\tstyleUrls: ['./event.component.css']\r\n})\r\nexport class EventComponent implements OnInit {\r\n\r\n\tevent: Event;\r\n\r\n\tconstructor(private router: Router, private eventService: EventService) {\r\n\t\tthis.event = new Event(undefined, undefined, undefined, undefined, undefined, undefined, undefined);\r\n\t}\r\n\r\n\tngOnInit(): void {\r\n\t}\r\n\r\n\t// CREATE\r\n\tcreateEvent() {\r\n\t\tconsole.log(\"create() clicked.\");\r\n\r\n\t\t// Constructs an event object based on input values\r\n\t\tlet eventName = (<HTMLInputElement>document.getElementById(\"inputEventName\")).value;\r\n\t\tlet eventDescription = (<HTMLInputElement>document.getElementById(\"inputEventDescription\")).value;\r\n\t\tlet eventLocation = (<HTMLInputElement>document.getElementById(\"inputEventLocation\")).value;\r\n\t\tlet dateTime = (<HTMLInputElement>document.getElementById(\"inputDateTime\")).value;\r\n\t\tlet eventType = (<HTMLInputElement>document.getElementById(\"inputEventType\")).value;\r\n\t\tthis.event = new Event(sessionStorage.getItem(\"email\"), undefined, eventName, eventDescription, eventLocation, dateTime, eventType);\r\n\r\n\t\t// Sanity check\r\n\t\tconsole.log(this.event);\r\n\r\n\t\t// POSTs event to endpoint and routes to event view\r\n\t\tthis.eventService.createEvent(this.event).subscribe(data => this.router.navigate([\"/eventview\"]));\r\n\t}\r\n}\r\n","<div class=\"container shadow bg-light p-2 my-5\">\r\n\t<div class=\"container d-flex justify-content-center mt-5\">\r\n\t\t<img class=\"rounded mx-auto d-block shadow\" src=\"https://w.wallhaven.cc/full/5w/wallhaven-5w6j85.jpg\" width=\"50%\" alt=\"Event Image\">\r\n\t</div>\r\n\t<!-- EVENT CREATION -->\r\n\t<div class=\"container\">\r\n\t\t<div class=\"row\">\r\n\t\t\t<div class=\"col-6 mx-auto\">\r\n\t\t\t\t<h2 class=\"display-4 text-center m-4\">Add an Event</h2>\r\n\t\t\t\t<form (ngSubmit)=\"createEvent()\" #thisForm=\"ngForm\">\r\n\t\t\t\t\t<!-- INPUT FIELDS -->\r\n\t\t\t\t\t<div class=\"form-group\">\r\n\t\t\t\t\t\t<input [(ngModel)]=\"event.eventName\" #eventName=\"ngModel\" name=\"inputEventName\" id=\"inputEventName\" type=\"text\" placeholder=\"Event Name\" class=\"form-control border-0 shadow px-4\" required>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div class=\"form-group\">\r\n\t\t\t\t\t\t<input [(ngModel)]=\"event.eventDescription\" #eventDescription=\"ngModel\" name=\"inputEventDescription\" id=\"inputEventDescription\" type=\"text\" placeholder=\"Event Description\" class=\"form-control border-0 shadow px-4\" required>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div class=\"form-group\">\r\n\t\t\t\t\t\t<input [(ngModel)]=\"event.eventLocation\" #eventLocation=\"ngModel\" name=\"inputEventLocation\" id=\"inputEventLocation\" type=\"text\" placeholder=\"Event Location\" class=\"form-control border-0 shadow px-4\" required>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div class=\"form-group\">\r\n\t\t\t\t\t\t<input [(ngModel)]=\"event.dateTime\" #dateTime=\"ngModel\" name=\"inputDateTime\" id=\"inputDateTime\" type=\"datetime-local\" class=\"form-control border-0 shadow px-4\" required>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div class=\"form-group\">\r\n\t\t\t\t\t\t<select [(ngModel)]=\"event.eventType\" #eventType=\"ngModel\" name=\"inputEventType\" id=\"inputEventType\" class=\"form-control border-0 shadow px-4\">\r\n\t\t\t\t\t\t\t<option value=\"Generic Event\">Generic Event</option>\r\n\t\t\t\t\t\t\t<option value=\"Outdoors\">Outdoors</option>\r\n\t\t\t\t\t\t\t<option value=\"Bar\">Bar</option>\r\n\t\t\t\t\t\t\t<option value=\"Brunch\">Brunch</option>\r\n\t\t\t\t\t\t\t<option value=\"Party\">Party</option>\r\n\t\t\t\t\t\t\t<option value=\"Game Night\">Game Night</option>\r\n\t\t\t\t\t\t\t<option value=\"Hootenanny\">Hootenanny</option>\r\n\t\t\t\t\t\t</select>\r\n\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t<!-- BUTTONS -->\r\n\t\t\t\t\t<div class=\"container col-8 my-5\">\r\n\t\t\t\t\t\t<button class=\"btn btn-success btn-block shadow\" type=\"submit\">Add</button>\r\n\t\t\t\t\t\t<button class=\"btn btn-warning btn-block shadow\" type=\"reset\">Reset</button>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</form>\r\n\r\n\t\t\t\t<!-- ROUTING -->\r\n\t\t\t\t<!-- <div class=\"container col-8 my-4\">\r\n\t\t\t\t\t<button class=\"btn btn-primary btn-block shadow\" type=\"button\" [routerLink]=\"['/profile']\" routerLinkActive=\"router-link-active\">My Profile</button>\r\n\t\t\t\t</div> -->\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t</div>\r\n</div>","import { Component, OnInit } from '@angular/core';\r\nimport { EventService } from '../service/event.service';\r\nimport { Router } from '@angular/router';\r\n\r\nimport { Event } from '../class/event/event';\r\n\r\n@Component({\r\n\tselector: 'app-eventview',\r\n\ttemplateUrl: './eventview.component.html',\r\n\tstyleUrls: ['./eventview.component.css']\r\n})\r\nexport class EventviewComponent implements OnInit {\r\n\r\n\tevent: Event;\r\n\tevents: Event[] = [];\r\n\r\n\ttempID: any;\r\n\ttempArray: Event[];\r\n\r\n\teventID: string;\r\n\r\n\tconstructor(private eventService: EventService) {\r\n\t\tthis.event = new Event(undefined, undefined, undefined, undefined, undefined, undefined, undefined);\r\n\t}\r\n\r\n\tngOnInit(): void {\r\n\t\tthis.eventService.getAllEvents().subscribe(data => {\r\n\t\t\tconsole.log(\"ALL EVENTS FROM DATABASE: \");\r\n\t\t\tfor (let i in data) {\r\n\t\t\t\tconsole.log(data[i]);\r\n\t\t\t\tif (data[i].userEmail == sessionStorage.getItem(\"email\")) {\r\n\t\t\t\t\tthis.events.push(data[i]);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t})\r\n\t}\r\n\r\n\tisHidden = false;\r\n\tdeleteEvent(index: number) {\r\n\t\t// Note: be careful ordering things around in here; may break method\r\n\r\n\t\tconsole.log(\"test() clicked.\");\r\n\r\n\t\t// Assigns to local variable and passes it as an argument to backend\r\n\t\tthis.tempID = this.events[index].eventID;\r\n\t\tconsole.log(\"Current index's eventID: \" + this.events[index].eventID);\r\n\t\tthis.eventService.deleteEventById(this.tempID).subscribe(data => this.event = data)\r\n\r\n\t\t// Removes from local array (to hide from user immediately)\r\n\t\tthis.events.splice(index, 1);\r\n\t}\r\n}\r\n","<!-- EVENT VIEW -->\r\n<div class=\"container shadow bg-light p-2 my-5\">\r\n\t<div class=\"container\">\r\n\t\t<div class=\"display-4 text-center m-4\">\r\n\t\t\tMy Events\r\n\t\t</div>\r\n\t\t<div class=\"container col-8\">\r\n\t\t\t<div *ngFor=\"let event of events; let i=index\">\r\n\t\t\t\t<div *ngIf=\"!isHidden\" class=\"card p-4 my-4 border-0 shadow\">\r\n\t\t\t\t\t<p hidden><strong>Event ID: </strong>{{event?.eventID}}</p>\r\n\t\t\t\t\t<p><strong>Event Name: </strong>{{event?.eventName}}</p>\r\n\t\t\t\t\t<p><strong>Event Description: </strong>{{event?.eventDescription}}</p>\r\n\t\t\t\t\t<p><strong>Event Location: </strong>{{event?.eventLocation}}</p>\r\n\t\t\t\t\t<p><strong>Date & Time: </strong>{{event?.dateTime | date}}</p>\r\n\t\t\t\t\t<p><strong>Event Type: </strong>{{event?.eventType}}</p>\r\n\t\t\t\t\t<hr>\r\n\r\n\t\t\t\t\t<button class=\"btn btn-danger\" (click)=\"deleteEvent(i)\" type=\"button\">Delete</button>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\r\n\t\t<!-- ROUTING -->\r\n\t\t<!-- <div class=\"container col-4\">\r\n\t\t\t<button class=\"btn btn-success btn-block shadow my-4\" type=\"button\" [routerLink]=\"['/event']\" routerLinkActive=\"router-link-active\">Add a New Event</button>\r\n\t\t\t<button class=\"btn btn-primary btn-block shadow my-4\" type=\"button\" [routerLink]=\"['/profile']\" routerLinkActive=\"router-link-active\">My Profile</button>\r\n\t\t</div> -->\r\n\t</div>\r\n</div>","import { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\n\r\nimport { User } from '../class/user/user';\r\nimport { ConfigService } from '../service/config.service';\r\nimport { PasswordEncryptionService } from '../service/password-encryption.service';\r\n\r\n@Component({\r\n\tselector: 'app-login',\r\n\ttemplateUrl: './login.component.html',\r\n\tstyleUrls: ['./login.component.css']\r\n})\r\nexport class LoginComponent implements OnInit {\r\n\r\n\tuser: User = new User(0, \"\", \"\", \"\", \"\", \"\");\r\n\r\n\tconstructor(private router: Router, private configService: ConfigService, private encryptionService: PasswordEncryptionService) {\r\n\t}\r\n\r\n\tngOnInit(): void {\r\n\t}\r\n\r\n\tlogin() {\r\n\t\tconsole.log(\"--- login() button pressed ---\");\r\n\r\n\t\t// Constructs a user object based on input values\r\n\t\tlet email = (<HTMLInputElement>document.getElementById(\"inputEmail\")).value;\r\n\t\tlet password = (<HTMLInputElement>document.getElementById(\"inputPassword\")).value;\r\n\t\tlet user: User = new User(undefined, email, password, undefined, undefined, undefined);\r\n\r\n\t\t// Sanity check\r\n\t\tconsole.log(\"SENDING USER TO BACKEND: \");\r\n\t\tconsole.log(user);\r\n\r\n\t\t// Validates and routes accordingly\r\n\t\tthis.configService.login(user).subscribe(data => {\r\n\t\t\tconsole.log(\"USER FROM DATABASE: \");\r\n\t\t\tconsole.log(data);\r\n\t\t\tif (data != null) {\r\n\t\t\t\tconsole.log(\"Successful login.\");\r\n\r\n\t\t\t\t// Saves data (email) to a session\r\n\t\t\t\tsessionStorage.setItem(\"email\", email);\r\n\t\t\t\tlet sessionKey = sessionStorage.getItem(\"email\");\r\n\t\t\t\tconsole.log(\"Stored key: \" + sessionKey);\r\n\r\n\t\t\t\t// Route\r\n\t\t\t\twindow.location.assign(\"/eventview\")\r\n\t\t\t} else {\r\n\t\t\t\tconsole.log(\"Failed login.\");\r\n\t\t\t\talert(\"Invalid credentials!\");\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n}\r\n\r\n// // Constructs a user object based on input values\r\n// let email = (<HTMLInputElement>document.getElementById(\"inputEmail\")).value;\r\n// let password = (<HTMLInputElement>document.getElementById(\"inputPassword\")).value;\r\n// this.user.email = email;\r\n// this.user.password = password;\r\n\r\n// // Validates against hard-coded credentials\r\n// if (this.user.email == \"hello@world.com\" && this.user.password == \"p4ssw0rd\") {\r\n// \talert('Login success!\\n\\n' + JSON.stringify(this.user, null, 4));\r\n// \tlocation.href = \"/profile\"; // routes accordingly\r\n// } else {\r\n// \talert(\"Invalid credentials!\")\r\n// }\r\n\r\n// // Sends user object to backend AND routes to event view\r\n// this.configService.login(this.user).subscribe(data => this.router.navigate([\"/eventview\"]));\r\n\r\n// // Optional error handling\r\n// this.configService.login(this.user).subscribe({\r\n// \tnext: data => this.tempUser = data,\r\n// \terror: error => console.log(\"Error: \", error)\r\n// });","<div class=\"container-fluid\">\r\n\t<div class=\"row no-gutter\">\r\n\t\t<!-- LEFT HALF -->\r\n\t\t<div class=\"col-md-6 d-none d-md-flex bg-image\"></div>\r\n\r\n\t\t<!-- RIGHT HALF -->\r\n\t\t<div class=\"col-md-6 bg-light\">\r\n\t\t\t<div class=\"login d-flex align-items-center\">\r\n\r\n\t\t\t\t<!-- LOGIN-->\r\n\t\t\t\t<div class=\"container\">\r\n\t\t\t\t\t<div class=\"row\">\r\n\t\t\t\t\t\t<div class=\"col-lg-10 col-xl-8 mx-auto\">\r\n\t\t\t\t\t\t\t<h3 class=\"display-4\">Login</h3>\r\n\t\t\t\t\t\t\t<form (ngSubmit)=\"login()\" #thisForm=\"ngForm\">\r\n\t\t\t\t\t\t\t\t<!-- INPUT FIELDS -->\r\n\t\t\t\t\t\t\t\t<div class=\"form-group\">\r\n\t\t\t\t\t\t\t\t\t<input [(ngModel)]=\"user.email\" #email=\"ngModel\" name=\"inputEmail\" id=\"inputEmail\" type=\"email\" placeholder=\"Email address\" class=\"form-control rounded-pill border-0 shadow my-3 px-4\" required>\r\n\t\t\t\t\t\t\t\t\t<div *ngIf=\"email.invalid && (email.dirty || email.touched)\" class=\"alert alert-danger rounded-pill border-0 shadow m-1 p-1 text-center text-muted\">\r\n\t\t\t\t\t\t\t\t\t\t<div *ngIf=\"email.errors.required\">Email is required!</div>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t<div class=\"form-group\">\r\n\t\t\t\t\t\t\t\t\t<input [(ngModel)]=\"user.password\" #password=\"ngModel\" name=\"inputPassword\" id=\"inputPassword\" type=\"password\" placeholder=\"Password\" class=\"form-control rounded-pill border-0 shadow my-3 px-4\" required>\r\n\t\t\t\t\t\t\t\t\t<div *ngIf=\"password.invalid && (password.dirty || password.touched)\" class=\"alert alert-danger rounded-pill border-0 shadow m-1 p-1 text-center text-muted\">\r\n\t\t\t\t\t\t\t\t\t\t<div *ngIf=\"password.errors.required\">\r\n\t\t\t\t\t\t\t\t\t\t\tPassword is required!\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t\t<!-- BUTTONS -->\r\n\t\t\t\t\t\t\t\t<button class=\"btn btn-primary btn-block text-uppercase rounded-pill border-0 shadow mt-4\" type=\"submit\" [disabled]=\"!thisForm.form.valid\">Sign In</button>\r\n\r\n\t\t\t\t\t\t\t\t<!-- ROUTING -->\r\n\t\t\t\t\t\t\t\t<div class=\"text-center justify-content-between mt-4\">\r\n\t\t\t\t\t\t\t\t\t<p>\r\n\t\t\t\t\t\t\t\t\t\tNew user? <a [routerLink]=\"['/register']\" routerLinkActive=\"router-link-active\" class=\"font-italic text-muted\">Register</a>\r\n\t\t\t\t\t\t\t\t\t</p>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</form>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t</div>\r\n</div>","import { Component, OnInit } from '@angular/core';\r\n\r\nimport { User } from '../class/user/user';\r\nimport { ConfigService } from '../service/config.service';\r\nimport { Router } from '@angular/router';\r\n\r\n@Component({\r\n\tselector: 'app-profile',\r\n\ttemplateUrl: './profile.component.html',\r\n\tstyleUrls: ['./profile.component.css']\r\n})\r\nexport class ProfileComponent implements OnInit {\r\n\r\n\tuser: User;\r\n\r\n\tconstructor(private router: Router, private configService: ConfigService) {\r\n\t}\r\n\r\n\tngOnInit(): void {\r\n\r\n\t\t// Automatically grabs key from sessionStorage\r\n\t\tlet sessionKey = sessionStorage.getItem(\"email\");\r\n\t\tconsole.log(\"Current sessionKey: \" + sessionKey);\r\n\r\n\t\t// Extracts user from endpoint and assigns to local object\r\n\t\tthis.configService.getUserByEmail(sessionKey).subscribe(data => this.user = data);\r\n\t}\r\n\r\n\tlogOut() {\r\n\t\tconsole.log(\"--- logOut() button clicked ---\");\r\n\r\n\t\t// Removes all saved data from session\r\n\t\tlet sessionKey = sessionStorage.getItem(\"email\");\r\n\t\tconsole.log(\"sessionKey: \" + sessionKey);\r\n\t\tsessionStorage.clear();\r\n\r\n\t\t// Tests if key still remains\r\n\t\tlet clearedKey = sessionStorage.getItem(\"email\");\r\n\t\tconsole.log(\"clearedKey: \" + clearedKey);\r\n\r\n\t\t// Routes\r\n\t\twindow.location.assign(\"/login\")\r\n\t}\r\n}\r\n\r\n// SESSIONSTORAGE\r\n// // Save data to sessionStorage\r\n// sessionStorage.setItem('key', 'value');\r\n\r\n// // Get saved data from sessionStorage\r\n// let data = sessionStorage.getItem('key');\r\n\r\n// // Remove saved data from sessionStorage\r\n// sessionStorage.removeItem('key');\r\n\r\n// // Remove all saved data from sessionStorage\r\n// sessionStorage.clear();","<div class=\"container my-5\">\r\n\t<div class=\"card\" style=\"width: 18rem;\">\r\n\t\t<img class=\"card-img-top my-4 p-4\" src=\"https://gatherup.com/wp-content/themes/gatherup/assets/images/GatherUp-Logo.svg\" alt=\"Card Image\">\r\n\t\t<div class=\"card-body\">\r\n\t\t\t<h4 class=\"card-title mb-4\">User Information</h4>\r\n\t\t\t<!-- USER INFORMATION -->\r\n\t\t\t<div class=\"text-left\">\r\n\t\t\t\t<p><strong>Email: </strong>{{user?.email}}</p>\r\n\t\t\t\t<p><strong>Password: </strong>{{user?.password}}</p>\r\n\t\t\t\t<p><strong>First Name: </strong>{{user?.firstName}}</p>\r\n\t\t\t\t<p><strong>Last Name: </strong>{{user?.lastName}}</p>\r\n\t\t\t\t<p><strong>Contact: </strong>{{user?.contact}}</p>\r\n\t\t\t</div>\r\n\t\t\t<!-- BUTTONS -->\r\n\t\t\t<div class=\"mt-5\">\r\n\t\t\t\t<button class=\"btn btn-primary btn-block\" [routerLink]=\"['/eventview']\" routerLinkActive=\"router-link-active\">My Events</button>\r\n\t\t\t\t<button class=\"btn btn-success btn-block\" [routerLink]=\"['/event']\" routerLinkActive=\"router-link-active\">Add Events</button>\r\n\t\t\t\t<button class=\"btn btn-danger btn-block\" (click)=\"logOut()\" [routerLink]=\"['/']\" routerLinkActive=\"router-link-active\">Log Out</button>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t</div>\r\n</div>\r\n\r\n<!-- \r\n\t*ngFor=\"let user of users\"\r\n\r\n\tTo print raw JSON:\r\n\t\t<p>User: {{user | json}}</p>\r\n -->","import { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\n\r\nimport { User } from '../class/user/user';\r\nimport { ConfigService } from '../service/config.service';\r\nimport { PasswordEncryptionService } from '../service/password-encryption.service';\r\n\r\n@Component({\r\n\tselector: 'app-register',\r\n\ttemplateUrl: './register.component.html',\r\n\tstyleUrls: ['./register.component.css']\r\n})\r\nexport class RegisterComponent implements OnInit {\r\n\r\n\tuser: User = new User(0, \"\", \"\", \"\", \"\", \"\");\r\n\r\n\tconstructor(private router: Router, private configService: ConfigService, private encryptionService: PasswordEncryptionService) {\r\n\t}\r\n\r\n\tngOnInit(): void {\r\n\t}\r\n\r\n\tregister() {\r\n\t\tconsole.log(\"--- register() button pressed ---\");\r\n\r\n\t\t// Constructs a user object based on input values\r\n\t\tlet email = (<HTMLInputElement>document.getElementById(\"inputEmail\")).value;\r\n\t\tlet password = (<HTMLInputElement>document.getElementById(\"inputPassword\")).value;\r\n\t\tlet firstName = (<HTMLInputElement>document.getElementById(\"inputFirstName\")).value;\r\n\t\tlet lastName = (<HTMLInputElement>document.getElementById(\"inputLastName\")).value;\r\n\t\tlet contact = (<HTMLInputElement>document.getElementById(\"inputContact\")).value;\r\n\t\tlet user: User = new User(undefined, email, password, firstName, lastName, contact);\r\n\r\n\t\t// Sanity check\r\n\t\tconsole.log(\"SENDING USER TO BACKEND: \");\r\n\t\tconsole.log(user);\r\n\r\n\t\t// Validates and route accordingly\r\n\t\tthis.configService.createUser(user).subscribe(data => {\r\n\t\t\tconsole.log(\"USER FROM DATABASE: \");\r\n\t\t\tconsole.log(data);\r\n\t\t\tif (data != null) {\r\n\t\t\t\tconsole.log(\"Registration success.\");\r\n\r\n\t\t\t\t// Saves data (email) to a session\r\n\t\t\t\tsessionStorage.setItem(\"email\", email);\r\n\t\t\t\tlet sessionKey = sessionStorage.getItem(\"email\");\r\n\t\t\t\tconsole.log(\"Stored key: \" + sessionKey);\r\n\r\n\t\t\t\t// Route\r\n\t\t\t\twindow.location.assign(\"/profile\")\r\n\t\t\t} else {\r\n\t\t\t\tconsole.log(\"Registration failed.\");\r\n\t\t\t\talert(\"User already exists. Try logging in instead?\");\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n}\r\n\r\n// // Constructs a user object based on input values; NOT NEEDED ANYMORE B/C TWO-WAY BINDING\r\n// let email = (<HTMLInputElement>document.getElementById(\"inputEmail\")).value;\r\n// let password = (<HTMLInputElement>document.getElementById(\"inputPassword\")).value;\r\n// let firstName = (<HTMLInputElement>document.getElementById(\"inputFirstName\")).value;\r\n// let lastName = (<HTMLInputElement>document.getElementById(\"inputLastName\")).value;\r\n// let contact = (<HTMLInputElement>document.getElementById(\"inputContact\")).value;\r\n// this.user = new User(undefined, email, password, firstName, lastName, contact);","<div class=\"container-fluid\">\r\n\t<div class=\"row no-gutter\">\r\n\t\t<!-- LEFT HALF -->\r\n\t\t<div class=\"col-md-6 d-none d-md-flex bg-image\"></div>\r\n\r\n\t\t<!-- RIGHT HALF -->\r\n\t\t<div class=\"col-md-6 bg-light\">\r\n\t\t\t<div class=\"register d-flex align-items-center\">\r\n\r\n\t\t\t\t<!-- REGISTER-->\r\n\t\t\t\t<div class=\"container\">\r\n\t\t\t\t\t<div class=\"row\">\r\n\t\t\t\t\t\t<div class=\"col-lg-10 col-xl-8 mx-auto\">\r\n\t\t\t\t\t\t\t<p class=\"display-4\">Register</p>\r\n\t\t\t\t\t\t\t<form (ngSubmit)=\"register()\" #thisForm=\"ngForm\">\r\n\t\t\t\t\t\t\t\t<!-- INPUT FIELDS -->\r\n\t\t\t\t\t\t\t\t<div class=\"form-group\">\r\n\t\t\t\t\t\t\t\t\t<input [(ngModel)]=\"user.email\" #email=\"ngModel\" name=\"inputEmail\" id=\"inputEmail\" type=\"email\" placeholder=\"Email address\" class=\"form-control rounded-pill border-0 shadow px-4\" required>\r\n\t\t\t\t\t\t\t\t\t<div *ngIf=\"email.invalid && (email.dirty || email.touched)\" class=\"alert alert-danger rounded-pill border-0 shadow m-1 p-1 text-center text-muted\">\r\n\t\t\t\t\t\t\t\t\t\t<div *ngIf=\"email.errors.required\">\r\n\t\t\t\t\t\t\t\t\t\t\tEmail is required!\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t<div class=\"form-group\">\r\n\t\t\t\t\t\t\t\t\t<input [(ngModel)]=\"user.password\" #password=\"ngModel\" name=\"inputPassword\" id=\"inputPassword\" type=\"password\" placeholder=\"Password\" class=\"form-control rounded-pill border-0 shadow px-4\" pattern=\"^(?=.*[0-9])(?=.*[a-z])(?=.*[A-Z]).{8,}\" required>\r\n\t\t\t\t\t\t\t\t\t<div *ngIf=\"password.invalid && (password.dirty || password.touched)\" class=\"alert alert-danger rounded-pill border-0 shadow m-1 p-1 text-center text-muted\">\r\n\t\t\t\t\t\t\t\t\t\t<div *ngIf=\"password.errors?.required\">\r\n\t\t\t\t\t\t\t\t\t\t\tPassword is required!\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t<!-- PatternValidator -->\r\n\t\t\t\t\t\t\t\t\t\t<div *ngIf=\"password.errors?.pattern\">\r\n\t\t\t\t\t\t\t\t\t\t\tPassword must be at least 8 characters long with at least one uppercase, one lowercase and one number.\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t<div class=\"form-group\">\r\n\t\t\t\t\t\t\t\t\t<input [(ngModel)]=\"user.firstName\" #firstName=\"ngModel\" name=\"inputFirstName\" id=\"inputFirstName\" type=\"text\" placeholder=\"First name\" class=\"form-control rounded-pill border-0 shadow px-4\" required>\r\n\t\t\t\t\t\t\t\t\t<div *ngIf=\"firstName.invalid && (firstName.dirty || firstName.touched)\" class=\"alert alert-danger rounded-pill border-0 shadow m-1 p-1 text-center text-muted\">\r\n\t\t\t\t\t\t\t\t\t\t<div *ngIf=\"firstName.errors.required\">\r\n\t\t\t\t\t\t\t\t\t\t\tFirst name is required!\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t<div class=\"form-group\">\r\n\t\t\t\t\t\t\t\t\t<input [(ngModel)]=\"user.lastName\" #lastName=\"ngModel\" name=\"inputLastName\" id=\"inputLastName\" type=\"text\" placeholder=\"Last name\" class=\"form-control rounded-pill border-0 shadow px-4\" required>\r\n\t\t\t\t\t\t\t\t\t<div *ngIf=\"lastName.invalid && (lastName.dirty || lastName.touched)\" class=\"alert alert-danger rounded-pill border-0 shadow m-1 p-1 text-center text-muted\">\r\n\t\t\t\t\t\t\t\t\t\t<div *ngIf=\"lastName.errors.required\">\r\n\t\t\t\t\t\t\t\t\t\t\tLast name is required!\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t<div class=\"form-group\">\r\n\t\t\t\t\t\t\t\t\t<input [(ngModel)]=\"user.contact\" #contact=\"ngModel\" name=\"inputContact\" id=\"inputContact\" type=\"text\" placeholder=\"Phone number\" class=\"form-control rounded-pill border-0 shadow px-4\" pattern=\"[0-9]{10}\" required>\r\n\t\t\t\t\t\t\t\t\t<div *ngIf=\"contact.invalid && (contact.dirty || contact.touched)\" class=\"alert alert-danger rounded-pill border-0 shadow m-1 p-1 text-center text-muted\">\r\n\t\t\t\t\t\t\t\t\t\t<div *ngIf=\"contact.errors.required\">\r\n\t\t\t\t\t\t\t\t\t\t\tPhone number is required!\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t<!-- PatternValidator -->\r\n\t\t\t\t\t\t\t\t\t\t<div *ngIf=\"contact.errors?.pattern\">\r\n\t\t\t\t\t\t\t\t\t\t\tPhone number must be in 10-digit format without hyphens.\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t\t<!-- BUTTONS -->\r\n\t\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t\t<button class=\"btn btn-primary btn-block text-uppercase rounded-pill border-0 shadow mt-4\" type=\"submit\" [disabled]=\"!thisForm.form.valid\">Sign Up</button>\r\n\t\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t\t<!-- ROUTING -->\r\n\t\t\t\t\t\t\t\t<div class=\"text-center justify-content-between mt-4\">\r\n\t\t\t\t\t\t\t\t\t<p>\r\n\t\t\t\t\t\t\t\t\t\tHave an account? <a [routerLink]=\"['/login']\" routerLinkActive=\"router-link-active\" class=\"font-italic text-muted\">Login</a>\r\n\t\t\t\t\t\t\t\t\t</p>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</form>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t</div>\r\n</div>","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\n\r\nimport { User } from '../class/user/user';\r\n\r\n/*\r\n\tThis service provides CRUD operations for users\r\n*/\r\n@Injectable({\r\n\tprovidedIn: 'root'\r\n})\r\nexport class ConfigService {\r\n\r\n\tpublic baseUrl: string;\r\n\r\n\t// Custom HTTP options to throw into CRUD operations\r\n\thttpOptions = {\r\n\t\theaders: new HttpHeaders({\r\n\t\t\t'Content-Type': 'application/json',\r\n\t\t\t'Access-Control-Allow-Origin': '*',\r\n\t\t\t'Authorization': 'authkey',\r\n\t\t}),\r\n\t};\r\n\r\n\t// Boots HttpClient upon creation\r\n\tconstructor(private http: HttpClient) {\r\n\t\tthis.baseUrl = \"http://localhost:9999/\"; // sets baseUrl to the \"home\" endpoint\r\n\t}\r\n\r\n\t// CREATE\r\n\tpublic createUser(user: User) {\r\n\t\treturn this.http.post<User>(this.baseUrl + \"user\", user, this.httpOptions); // localhost:9999/user\r\n\t}\r\n\r\n\t// READ\r\n\tpublic getAllUsers(): Observable<User[]> {\r\n\t\treturn this.http.get<User[]>(this.baseUrl + \"user/all\", this.httpOptions); // localhost:9999/user/all\r\n\t}\r\n\r\n\tpublic getUserById(id: number): Observable<User> {\r\n\t\treturn this.http.get<User>(this.baseUrl + \"user/\" + id, this.httpOptions); // localhost:9999/user/{id}\r\n\t}\r\n\r\n\tpublic getUserByEmail(email: string): Observable<User> {\r\n\t\treturn this.http.get<User>(this.baseUrl + \"user/email/\" + email, this.httpOptions); // localhost:9999/user/email/{email}\r\n\t}\r\n\r\n\t// UPDATE\r\n\tpublic updateUser(user: User) {\r\n\t\treturn this.http.put<User>(this.baseUrl + \"user\", user, this.httpOptions); // localhost:9999/user\r\n\t}\r\n\r\n\t// DELETE\r\n\tpublic deleteUserById(id: number) {\r\n\t\treturn this.http.delete<User>(this.baseUrl + \"user/\" + id, this.httpOptions) // localhost:9999/user/{id}\r\n\t}\r\n\r\n\t// LOGIN\r\n\tpublic login(user: User): Observable<User> {\r\n\t\treturn this.http.post<User>(this.baseUrl + \"user/verify\", user); // localhost:9999/user/verify\r\n\t}\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\n\r\nimport { Event } from '../class/event/event';\r\n\r\n/*\r\n\tThis service provides CRUD operations for events\r\n*/\r\n@Injectable({\r\n\tprovidedIn: 'root'\r\n})\r\nexport class EventService {\r\n\r\n\tpublic baseUrl: string;\r\n\r\n\t// Custom HTTP options to throw into CRUD operations\r\n\thttpOptions = {\r\n\t\theaders: new HttpHeaders({\r\n\t\t\t'Content-Type': 'application/json',\r\n\t\t\t'Access-Control-Allow-Origin': '*',\r\n\t\t\t'Authorization': 'authkey',\r\n\t\t}),\r\n\t};\r\n\r\n\t// Boots HttpClient upon creation\r\n\tconstructor(private http: HttpClient) {\r\n\t\tthis.baseUrl = \"http://localhost:9999/\"; // sets baseUrl to the \"home\" endpoint\r\n\t}\r\n\r\n\t// CREATE\r\n\tpublic createEvent(event: Event) {\r\n\t\treturn this.http.post<Event>(this.baseUrl + \"event\", event, this.httpOptions); // localhost:9999/event\r\n\t}\r\n\r\n\t// READ\r\n\tpublic getAllEvents(): Observable<Event[]> {\r\n\t\treturn this.http.get<Event[]>(this.baseUrl + \"event/all\", this.httpOptions); // localhost:9999/event/all\r\n\t}\r\n\r\n\tpublic getEventById(id: number): Observable<Event> {\r\n\t\treturn this.http.get<Event>(this.baseUrl + \"event/\" + id); // localhost:9999/event/{id}\r\n\t}\r\n\r\n\t// UPDATE\r\n\tpublic updateEvent(event: Event) {\r\n\t\treturn this.http.put<Event>(this.baseUrl + \"event\", event); // localhost:9999/event\r\n\t}\r\n\r\n\t// DELETE\r\n\tpublic deleteEventById(id: number) {\r\n\t\treturn this.http.delete<Event>(this.baseUrl + \"/event/\" + id) // localhost:9999/event/{id}\r\n\t}\r\n}\r\n","import { Injectable } from '@angular/core';\r\n// import { SSL_OP_SSLEAY_080_CLIENT_DH_BUG } from 'constants';\r\n\r\n/*\r\n\tEncrypts password before sending to DB\r\n*/\r\n@Injectable({\r\n\tprovidedIn: 'root'\r\n})\r\nexport class PasswordEncryptionService {\r\n\r\n\tconstructor() { }\r\n\r\n\tencrypt(password: string) {\r\n\t\tvar newPassword: string = \"\";\r\n\t\tvar forwards: string = \"ZYXWVUTSRQPONMLKJIHGFEDCBAabcdefghijklmnopqrstuvwxyz0987654321\";\r\n\t\tvar backwards: string = \"1234567890zyxwvutsrqponmlkjihgfedcbaABCDEFGHIJKLMNOPQRSTUVWXYZ\";\r\n\t\tvar tempIndex: number = 0;\r\n\r\n\t\tfor (var i: number = 0; i < password.length; i++) {\r\n\t\t\ttempIndex = forwards.indexOf(password[i]);\r\n\t\t\tnewPassword += backwards[tempIndex];\r\n\r\n\t\t}\r\n\t\tconsole.log(\"New password: \" + newPassword);\r\n\t\treturn newPassword;\r\n\t}\r\n}\r\n","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n"],"sourceRoot":"webpack:///"}